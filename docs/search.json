[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 kultarr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Janith Wanniarachchi. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wanniarachchi J (2024). kultarr: High dimensional visualization Anchors explanations. R package version 0.1.0.9001.","code":"@Manual{,   title = {kultarr: High dimensional visualization of Anchors explanations},   author = {Janith Wanniarachchi},   year = {2024},   note = {R package version 0.1.0.9001}, }"},{"path":"/index.html","id":"kultarr","dir":"","previous_headings":"","what":"High dimensional visualization of Anchors explanations ","title":"High dimensional visualization of Anchors explanations ","text":"goal kultarr generate understand anchors generated simpler intuitive approach.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"High dimensional visualization of Anchors explanations ","text":"can install development version kultarr like :","code":"remotes::install_github(\"janithwanni/kultarr\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"High dimensional visualization of Anchors explanations ","text":"basic example shows solve common problem: final_bounds variable list containing history algorithm (reward_history) resulting anchor (final_anchor). resulting anchor reward, precision coverage underlying algorithm additional diagnostic information. diagnostic information can helpful understanding algorithm explored solution space.","code":"library(kultarr) ## basic example code  library(randomForest) #> randomForest 4.7-1.1 #> Type rfNews() to see new features/changes/bug fixes. library(palmerpenguins) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following object is masked from 'package:randomForest': #>  #>     combine #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(tidyr)  set.seed(145) train_data <- penguins |>    drop_na() |>   select(bill_length_mm: body_mass_g, species) |>   slice_sample(prop = 0.8)  rf_model <- randomForest(species ~ ., data = train_data)  model_func <- function(model, data) {   return(predict(model, data)) }  final_bounds <- make_anchors(   rf_model,   dataset = train_data,   cols = train_data |> select(bill_length_mm:body_mass_g) |> colnames(),   instance = c(1),   model_func = model_func,   class_col = \"species\",   n_games = 5,   n_epochs = 50,   verbose = FALSE ) #> Warning: UNRELIABLE VALUE: Future ('<none>') unexpectedly generated random #> numbers without specifying argument 'seed'. There is a risk that those random #> numbers are not statistically sound and the overall results might be invalid. #> To fix this, specify 'seed=TRUE'. This ensures that proper, parallel-safe #> random numbers are produced via the L'Ecuyer-CMRG method. To disable this #> check, use 'seed=NULL', or set option 'future.rng.onMisuse' to \"ignore\". str(final_bounds) #> List of 2 #>  $ final_anchor  : tibble [2 × 9] (S3: tbl_df/tbl/data.frame) #>   ..$ id               : num [1:2] 1 1 #>   ..$ bill_length_mm   : num [1:2] 44.1 47.5 #>   ..$ bill_depth_mm    : num [1:2] 13.2 15 #>   ..$ flipper_length_mm: num [1:2] 212 224 #>   ..$ body_mass_g      : num [1:2] 4062 4662 #>   ..$ bound            : chr [1:2] \"lower\" \"upper\" #>   ..$ reward           : num [1:2] 0.5 0.5 #>   ..$ prec             : num [1:2] 1 1 #>   ..$ cover            : num [1:2] 0.0216 0.0216 #>  $ reward_history: tibble [250 × 14] (S3: tbl_df/tbl/data.frame) #>   ..$ bill_length_mm_l   : num [1:250] 46.2 46.1 46 46 45.8 ... #>   ..$ bill_length_mm_u   : num [1:250] 46.3 46.4 46.4 46.4 46.4 ... #>   ..$ bill_depth_mm_l    : num [1:250] 14 14 14 14 14 ... #>   ..$ bill_depth_mm_u    : num [1:250] 14.2 14.2 14.2 14.2 14.2 ... #>   ..$ flipper_length_mm_l: num [1:250] 216 216 216 216 216 ... #>   ..$ flipper_length_mm_u: num [1:250] 218 218 218 218 218 ... #>   ..$ body_mass_g_l      : num [1:250] 4300 4300 4300 4300 4300 4300 4300 4300 4300 4300 ... #>   ..$ body_mass_g_u      : num [1:250] 4400 4400 4400 4400 4400 ... #>   ..$ earned_reward      : num [1:250] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ prec               : num [1:250] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ cover              : num [1:250] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ game               : int [1:250] 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ epoch              : int [1:250] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ id                 : num [1:250] 1 1 1 1 1 1 1 1 1 1 ... final_bounds$final_anchor #> # A tibble: 2 × 9 #>      id bill_length_mm bill_depth_mm flipper_length_mm body_mass_g bound reward #>   <dbl>          <dbl>         <dbl>             <dbl>       <dbl> <chr>  <dbl> #> 1     1           44.1          13.2              212        4062. lower  0.500 #> 2     1           47.5          15                224.       4662. upper  0.500 #> # ℹ 2 more variables: prec <dbl>, cover <dbl> # Visualizing anchors in high dimensions  If the anchor has a dimension larger than 3 then it is possible to visualize it in high dimensions using tours.  There are several S7 classes built to make the process of visualizing the bounding box(es). (The option to visualize multiple boxes is still under development)  #### 1. Create a bounding_box object by giving the result from the Multi Armed Bandit algorithm   ```r bnd_box <- bounding_box(   bounds_tbl = final_bounds$final_anchor,   target_inst_row = train_data[1, ] |> select(bill_length_mm:body_mass_g),   point_colors = \"black\",   edges_colors = \"black\" )"},{"path":"/index.html","id":"id_2-create-an-anchor_tour-object-to-hold-the-data-needed-to-create-the-animation","dir":"","previous_headings":"Example","what":"2. Create an anchor_tour object to hold the data needed to create the animation","title":"High dimensional visualization of Anchors explanations ","text":"","code":"anc_tour <- anchor_tour(   bnd_box,   train_data |> select(bill_length_mm:body_mass_g),   \"blue\" )"},{"path":"/index.html","id":"id_3-animate-using-the-animate_anchor-function-by-passing-the-anchor_tour-object","dir":"","previous_headings":"Example","what":"3. Animate using the animate_anchor function by passing the anchor_tour object","title":"High dimensional visualization of Anchors explanations ","text":"","code":"animate_anchor(   anc_tour,   gif_file = \"man/figures/tour_animation.gif\",   width = 500,   height = 500,   frames = 360 )"},{"path":"/reference/anchor_tour.html","id":null,"dir":"Reference","previous_headings":"","what":"Data structure to hold information necessary to animate tours — anchor_tour","title":"Data structure to hold information necessary to animate tours — anchor_tour","text":"Data structure hold information necessary animate tours","code":""},{"path":"/reference/anchor_tour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data structure to hold information necessary to animate tours — anchor_tour","text":"","code":"anchor_tour(b_boxes, data, point_colors, point_shapes = 1, point_sizes = 1)"},{"path":"/reference/anchor_tour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data structure to hold information necessary to animate tours — anchor_tour","text":"b_boxes S7 object type boundary boxes data data.frame points visualize tours point_colors Character vector one nrow(data) point_shapes Numeric vector one nrow(data) containing shape number. Defaults hollow (.e. 1) point_sizes Numeric vector one nrow(data) containing size. Defaults 1","code":""},{"path":"/reference/anchors.html","id":null,"dir":"Reference","previous_headings":"","what":"S7 class to define anchors — anchors","title":"S7 class to define anchors — anchors","text":"S7 class define anchors Generic function calculate coverage anchor Generic function extend anchors Generic function calculate precision anchors S7 class define predicate Generic function calculate number rows dataset satisfied anchor","code":""},{"path":"/reference/anchors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S7 class to define anchors — anchors","text":"","code":"anchors(predicates = class_missing)  coverage(x, ...)  extend(x, ...)  precision(x, ...)  predicate(   feature = class_missing,   operator = class_missing,   constant = class_missing )  satisfies(x, ...)"},{"path":"/reference/anchors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S7 class to define anchors — anchors","text":"predicates vector objects S7 class predicate x Object S7 class anchor feature Character. Defines column predicate applied operator Binary operator works column constant given constant Value compare feature using operator. Can numeric/character/logical pred Object S7 class predicate model predict function provide predicted labels given dataset dist function can used generate samples providing argument n. return dataframe proper column names. n_samples number samples generate dist (perturbation distribution) data dataframe apply anchors . Can one instance entire dataset.","code":""},{"path":"/reference/anchors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S7 class to define anchors — anchors","text":"Object S7 class anchors Numeric. Coverage anchor named vector proportions logical vector indicating whether anchors satisfies data","code":""},{"path":"/reference/animate_anchor.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to visualize tours — animate_anchor","title":"Generic function to visualize tours — animate_anchor","text":"Generic function visualize tours","code":""},{"path":"/reference/animate_anchor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to visualize tours — animate_anchor","text":"","code":"animate_anchor(x, ...)"},{"path":"/reference/animate_anchor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to visualize tours — animate_anchor","text":"x object type anchor_tour ... Additional arguments passed display_xy gif_file file location save gif file tour_path object type 'tour_path' tourr package. Defaults grand_tour() width width gif file. Defaults 500 height height gif file. Defaults 500 frames number frames included gif file. Defaults 360 loop Logical. Defaults TRUE","code":""},{"path":"/reference/animate_anchor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to visualize tours — animate_anchor","text":"None. Saves GIF file location","code":""},{"path":"/reference/bounding_box.html","id":null,"dir":"Reference","previous_headings":"","what":"S7 class to hold the bounding box created by make_anchors — bounding_box","title":"S7 class to hold the bounding box created by make_anchors — bounding_box","text":"S7 class hold bounding box created make_anchors S7 class hold list bounding boxes","code":""},{"path":"/reference/bounding_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S7 class to hold the bounding box created by make_anchors — bounding_box","text":"","code":"bounding_box(bounds_tbl, target_inst_row, point_colors, edges_colors)  bounding_boxes(boxes = class_missing)"},{"path":"/reference/bounding_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S7 class to hold the bounding box created by make_anchors — bounding_box","text":"bounds_tbl Tibble containing two rows (p+1) columns p predictors. target_inst_row Tibble one row p columns target instance. point_colors Character vector 2^p length 1 value. boxes vector S7 objects class bounding box edge_colors Character cector 2^(p-1) * p length 1 value.","code":""},{"path":"/reference/bounding_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S7 class to hold the bounding box created by make_anchors — bounding_box","text":"S7 object class bounding box S7 object class bounding boxes","code":""},{"path":"/reference/get_reward.html","id":null,"dir":"Reference","previous_headings":"","what":"Reward function for Multi Armed Bandit. — get_reward","title":"Reward function for Multi Armed Bandit. — get_reward","text":"internal function","code":""},{"path":"/reference/get_reward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reward function for Multi Armed Bandit. — get_reward","text":"","code":"get_reward(   new_anchor,   round,   dist_func,   model_func,   dataset,   instance_id,   class_ind = 1,   verbose )"},{"path":"/reference/get_reward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reward function for Multi Armed Bandit. — get_reward","text":"new_anchor Object class anchor. round Numerical. value round coverage . dist_func Function takes n argument returns data.frame size n x p p number variables dataset model_func Function takes data.frame size m x p m number rows p number variables dataset returns vector predictions size m x 1 dataset Data frame used algorithm instance_id row index target instance dataset argument class_ind Numeric. index required class ordered alphabetically verbose Logical. Whether print diagnostics Multi-Armed Bandit Algorithm","code":""},{"path":"/reference/get_reward.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reward function for Multi Armed Bandit. — get_reward","text":"List containing reward, precision coverage","code":""},{"path":"/reference/mab_utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup function to get value of upper and lower bounds for the current state — envir_to_bounds","title":"Lookup function to get value of upper and lower bounds for the current state — envir_to_bounds","text":"current state multi armed bandit marked based indices list combination column lower upper bound type.","code":""},{"path":"/reference/mab_utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup function to get value of upper and lower bounds for the current state — envir_to_bounds","text":"","code":"envir_to_bounds(current_envir, envir, interest_cols)  update_bounds(current_envir, envir, actions, selected_action)  create_anchor_inst(bounds, interest_cols)  generate_cutpoints(dataset, instance_id, interest_columns)  make_perturb_distn(n, interest_cols, dataset, instance_id, seed = 123)"},{"path":"/reference/mab_utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup function to get value of upper and lower bounds for the current state — envir_to_bounds","text":"current_envir List indexes, current state envir current environment interest_cols Columns dataset interest selected_action index selected action actions list bounds upper lower bounds column interest dataset dataset used make anchors instance_id index target observation dataset n Number samples seed Numerical. Seed ensure perturbation distribution remains consistent. interest_coluns columns dataset consider creating lower upper bounds","code":""},{"path":"/reference/mab_utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup function to get value of upper and lower bounds for the current state — envir_to_bounds","text":"tibble 1 x (2*p) p number columns interest New bounds instance anchor class list. Contains lower upper bounds specific column interest. purrr partial function takes N returns N number sample points around instance","code":""},{"path":"/reference/make_anchors.html","id":null,"dir":"Reference","previous_headings":"","what":"Make anchors — make_anchors","title":"Make anchors — make_anchors","text":"function main entrypoint generates anchors running Multi-Armed Bandit algorithm","code":""},{"path":"/reference/make_anchors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make anchors — make_anchors","text":"","code":"make_anchors(   model,   dataset,   cols,   instance,   model_func,   class_col,   n_perturb_samples = 10000,   n_games = 20,   n_epochs = 100,   seed = 145,   verbose = FALSE )"},{"path":"/reference/make_anchors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make anchors — make_anchors","text":"model model interrogated dataset Dataset use containing predictors response variables. cols Columns interest instance Id instance interest training dataset model_func Function gives takes data model give predictions class_col Name factor column containing class interest n_perturb_samples number samples taken pertubation distribution n_games Numeric. Number games play. Default 20 games n_epochs Numeric. Number epochs single game. Default 100 epochs. seed Numeric. Seed used Multi-Armed Bandit algorithm. ensures results stay consistent verbose Logical. Whether print diagnostics Multi-Armed Bandit Algorithm","code":""},{"path":"/reference/make_anchors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make anchors — make_anchors","text":"data.frame size 2 x (p+1) p number columns interest row containing upper. lower bound.","code":""},{"path":"/reference/run_mab.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multi-Armed bandit algorithm — run_mab","title":"Run Multi-Armed bandit algorithm — run_mab","text":"Run Multi-Armed bandit algorithm","code":""},{"path":"/reference/run_mab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multi-Armed bandit algorithm — run_mab","text":"","code":"run_mab(   n_games,   n_epochs,   dataset,   instance_id,   environment,   interest_cols,   dist_func,   model_func,   class_ind,   seed = 145,   verbose )"},{"path":"/reference/run_mab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multi-Armed bandit algorithm — run_mab","text":"n_games Numeric. Number games play n_epochs Numeric. Number epochs single game dataset dataset run algorithm instance_id index target observation datasert environment environment poss interest_cols columns interest dist_func Function takes n argument returns data.frame size n x p p number variables dataset model_func Function takes data.frame size m x p m number rows p number variables dataset returns vector predictions size m x 1 class_ind Numeric. index required class ordered alphabetically seed Numeric. Seed used Multi-Armed Bandit algorithm. ensures results stay consistent verbose Logical. Whether print diagnostics Multi-Armed Bandit Algorithm","code":""},{"path":"/reference/run_mab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multi-Armed bandit algorithm — run_mab","text":"tibble 1 x (2*p) p number columns interest","code":""},{"path":"/reference/select_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to decide on the appropriate actions — select_action","title":"Function to decide on the appropriate actions — select_action","text":"Function decide appropriate actions","code":""},{"path":"/reference/select_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to decide on the appropriate actions — select_action","text":"","code":"select_action(n_actions, success_probs, failure_probs)"},{"path":"/reference/select_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to decide on the appropriate actions — select_action","text":"n_actions Number possible actions success_probs Numeric vector length equal n_actions containing values 0-1 failure_probs Numeric vector length equal n_actions containing values 0-1","code":""},{"path":"/reference/select_action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to decide on the appropriate actions — select_action","text":"Numeric value range 1 n_actions","code":""},{"path":"/reference/validate_bound.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to validate if a created boundary satisfies a given instance row — validate_bound","title":"Function to validate if a created boundary satisfies a given instance row — validate_bound","text":"Function validate created boundary satisfies given instance row","code":""},{"path":"/reference/validate_bound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to validate if a created boundary satisfies a given instance row — validate_bound","text":"","code":"validate_bound(b, instance_row)"},{"path":"/reference/validate_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to validate whether\nevery edge case of the environment can contain the row — validate_environment","title":"Function to validate whether\nevery edge case of the environment can contain the row — validate_environment","text":"Function validate whether every edge case environment can contain row","code":""},{"path":"/reference/validate_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to validate whether\nevery edge case of the environment can contain the row — validate_environment","text":"","code":"validate_environment(e, instance_row)"},{"path":"/news/index.html","id":"kultarr-development-version","dir":"Changelog","previous_headings":"","what":"kultarr (development version)","title":"kultarr (development version)","text":"Added functions create anchors Added functions visualize anchors using tourr package","code":""}]
